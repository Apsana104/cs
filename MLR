import numpy as np
#import scipy.stats as s
x1=[-5,-4,-1,2,2,3,3]
x2=[5,4,1,-3,-2,-2,-3]
y=[[11],[11],[8],[2],[5],[5],[4]]
x,res,ycap=[],[],[]
for i in range(len(x1)):
    x.append([1,x1[i],x2[i]])
x=np.array(x)
y=np.array(y)
def transpose(x):
    for i in range(len(x)):
        for j in range(len(x[0])):
            res[j][i]=x[i][j]
    return res
def multiply(x,y):
    s=np.zeros([x.shape[0],y.shape[1]],dtype="float")
    for i in range(len(x)):
        for j in range(len(y[0])):
            for k in range(len(y)):
                s[i,j]+=x[i,k]*y[k,j]
    return s
def mean(x):
    sum=0
    for i in range(0,len(x)):
        sum+=x[i]
    return sum/len(x)
res=np.zeros((3,7),dtype="float")
res=transpose(x)
print(res)
res=np.array(res)
z=np.zeros((3,3),dtype="float")
z=multiply(res,x)
print(z)
z1=np.zeros((3,1),dtype="float")
z1=multiply(res,y)
print(z1)
inv_mat=np.linalg.inv(np.array(z))        
print(inv_mat)  
beta=multiply(inv_mat,np.array(z1))
print("beta :",beta)
for i in range(len(y)):
    ycap.append(beta[0]+beta[1]*x1[i]+beta[2]*x2[i])
e=np.array(y)-np.array(ycap)
print(e)
f=np.array(y)-mean(y)
print(f)
sse=sum(e**2)
print("SSE:",sse)
sst=sum((y-mean(y))**2)
print("SST:",sst)
ssr=sst-sse
print("SSR:",ssr)
r2=ssr/sst
print(r2)
if (r2>0.90):
    print("MLR is good fit")
else:
    print("MLR is not a good fit")

